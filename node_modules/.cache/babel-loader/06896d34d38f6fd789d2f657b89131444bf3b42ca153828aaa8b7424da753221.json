{"ast":null,"code":"var _jsxFileName = \"F:\\\\project\\\\react\\\\jounas\\\\usepopcorn\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport StarRating from \"./StarRating\";\nimport Loader from \"./Ui/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetails = ({\n  movieIdSelected,\n  onCloseMovie,\n  onAddwatched,\n  isExistMovie\n}) => {\n  _s();\n  const [movie, setMovie] = useState({});\n  const [isLosding, setIsLoading] = useState(false);\n  const [movieRating, setMovieRating] = useState(0);\n  console.log(isExistMovie);\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n  const getMovie = async () => {\n    setIsLoading(true);\n    const response = await fetch(`http://www.omdbapi.com/?apikey=a862ad48&i=${movieIdSelected}`);\n    const data = await response.json();\n    setMovie(data);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    getMovie();\n  }, [movieIdSelected]);\n  const newWatched = {\n    imdbID: movieIdSelected,\n    title,\n    year,\n    poster,\n    imdbRating: +imdbRating,\n    runtime: runtime && Number(runtime.split(\" \").at(0)),\n    userRating: +movieRating\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLosding ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: onCloseMovie,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${title} movie`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [released, \" \\u2022 \", runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), imdbRating, \" IMDB rating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: isExistMovie ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StarRating, {\n              size: 24,\n              maxRating: 10,\n              onSetRating: setMovieRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), movieRating > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add\",\n              onClick: () => onAddwatched(newWatched),\n              children: \"+ Add movie to list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"this movie is rated with you in a few time ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starring \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directed by \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"2apYpwoWLdBLdrNXkbsp1nvokKs=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","StarRating","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetails","movieIdSelected","onCloseMovie","onAddwatched","isExistMovie","_s","movie","setMovie","isLosding","setIsLoading","movieRating","setMovieRating","console","log","Title","title","Year","year","Poster","poster","Runtime","runtime","imdbRating","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","getMovie","response","fetch","data","json","newWatched","imdbID","Number","split","at","userRating","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","size","maxRating","onSetRating","_c","$RefreshReg$"],"sources":["F:/project/react/jounas/usepopcorn/src/components/MovieDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport StarRating from \"./StarRating\";\r\nimport Loader from \"./Ui/Loader\";\r\n\r\nconst MovieDetails = ({\r\n  movieIdSelected,\r\n  onCloseMovie,\r\n  onAddwatched,\r\n  isExistMovie,\r\n}) => {\r\n  const [movie, setMovie] = useState({});\r\n  const [isLosding, setIsLoading] = useState(false);\r\n  const [movieRating, setMovieRating] = useState(0);\r\n\r\n  console.log(isExistMovie);\r\n\r\n  const {\r\n    Title: title,\r\n    Year: year,\r\n    Poster: poster,\r\n    Runtime: runtime,\r\n    imdbRating,\r\n    Plot: plot,\r\n    Released: released,\r\n    Actors: actors,\r\n    Director: director,\r\n    Genre: genre,\r\n  } = movie;\r\n\r\n  const getMovie = async () => {\r\n    setIsLoading(true);\r\n    const response = await fetch(\r\n      `http://www.omdbapi.com/?apikey=a862ad48&i=${movieIdSelected}`\r\n    );\r\n    const data = await response.json();\r\n    setMovie(data);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, [movieIdSelected]);\r\n\r\n  const newWatched = {\r\n    imdbID: movieIdSelected,\r\n    title,\r\n    year,\r\n    poster,\r\n    imdbRating: +imdbRating,\r\n    runtime: runtime && Number(runtime.split(\" \").at(0)),\r\n    userRating: +movieRating,\r\n  };\r\n\r\n  return (\r\n    <div className='details'>\r\n      {isLosding ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <header>\r\n            <button\r\n              className='btn-back'\r\n              onClick={onCloseMovie}\r\n            >\r\n              &larr;\r\n            </button>\r\n            <img\r\n              src={poster}\r\n              alt={`Poster of ${title} movie`}\r\n            />\r\n            <div className='details-overview'>\r\n              <h2>{title}</h2>\r\n              <p>\r\n                {released} &bull; {runtime}\r\n              </p>\r\n              <p>{genre}</p>\r\n              <p>\r\n                <span>‚≠ê</span>\r\n                {imdbRating} IMDB rating\r\n              </p>\r\n            </div>\r\n          </header>\r\n\r\n          <section>\r\n            <div className='rating'>\r\n              {isExistMovie ? (\r\n                <>\r\n                  <StarRating\r\n                    size={24}\r\n                    maxRating={10}\r\n                    onSetRating={setMovieRating}\r\n                  />\r\n                  {movieRating > 0 && (\r\n                    <button\r\n                      className='btn-add'\r\n                      onClick={() =>\r\n                        onAddwatched(newWatched)\r\n                      }\r\n                    >\r\n                      + Add movie to list\r\n                    </button>\r\n                  )}{\" \"}\r\n                </>\r\n              ) : (\r\n                <p>\r\n                  this movie is rated with you in a few time\r\n                  ago\r\n                </p>\r\n              )}\r\n            </div>\r\n            <p>\r\n              <em>{plot}</em>\r\n            </p>\r\n            <p>Starring {actors}</p>\r\n            <p>Directed by {director}</p>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}