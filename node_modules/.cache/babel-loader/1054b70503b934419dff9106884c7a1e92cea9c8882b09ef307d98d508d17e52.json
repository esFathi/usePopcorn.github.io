{"ast":null,"code":"var _jsxFileName = \"F:\\\\project\\\\react\\\\jounas\\\\usepopcorn\\\\src\\\\components\\\\ResultBox.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultBox = ({\n  movies\n}) => {\n  _s();\n  const [isOpen1, setIsOpen1] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-toggle\",\n      onClick: () => setIsOpen1(open => !open),\n      children: isOpen1 ? \"â€“\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), isOpen1 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(List, {\n        movie: movie\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultBox, \"eXjUZ/W0Q+n2qJfWK21HoG0qEiM=\");\n_c = ResultBox;\nconst List = ({\n  movie\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: `${movie.Title} poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDDD3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c2 = List;\nexport default ResultBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResultBox\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ResultBox","movies","_s","isOpen1","setIsOpen1","className","children","onClick","open","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","List","imdbID","_c","src","Poster","alt","Title","Year","_c2","$RefreshReg$"],"sources":["F:/project/react/jounas/usepopcorn/src/components/ResultBox.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst ResultBox = ({ movies }) => {\r\n  const [isOpen1, setIsOpen1] = useState(true);\r\n  return (\r\n    <div className='box'>\r\n      <button\r\n        className='btn-toggle'\r\n        onClick={() => setIsOpen1((open) => !open)}\r\n      >\r\n        {isOpen1 ? \"â€“\" : \"+\"}\r\n      </button>\r\n      {isOpen1 && (\r\n        <ul className='list'>\r\n          {movies?.map((movie) => (\r\n            <List movie={movie} key={movie.imdbID} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst List = ({ movie }) => {\r\n  return (\r\n    <li>\r\n      <img\r\n        src={movie.Poster}\r\n        alt={`${movie.Title} poster`}\r\n      />\r\n      <h3>{movie.Title}</h3>\r\n      <div>\r\n        <p>\r\n          <span>ðŸ—“</span>\r\n          <span>{movie.Year}</span>\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ResultBox;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,oBACEE,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBP,OAAA;MACEM,SAAS,EAAC,YAAY;MACtBE,OAAO,EAAEA,CAAA,KAAMH,UAAU,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAE;MAAAF,QAAA,EAE1CH,OAAO,GAAG,GAAG,GAAG;IAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EACRT,OAAO,iBACNJ,OAAA;MAAIM,SAAS,EAAC,MAAM;MAAAC,QAAA,EACjBL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEY,GAAG,CAAEC,KAAK,iBACjBf,OAAA,CAACgB,IAAI;QAACD,KAAK,EAAEA;MAAM,GAAMA,KAAK,CAACE,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACV,EAAA,CAnBIF,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAqBf,MAAMe,IAAI,GAAGA,CAAC;EAAED;AAAM,CAAC,KAAK;EAC1B,oBACEf,OAAA;IAAAO,QAAA,gBACEP,OAAA;MACEmB,GAAG,EAAEJ,KAAK,CAACK,MAAO;MAClBC,GAAG,EAAG,GAAEN,KAAK,CAACO,KAAM;IAAS;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFb,OAAA;MAAAO,QAAA,EAAKQ,KAAK,CAACO;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBb,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAM;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACfb,OAAA;UAAAO,QAAA,EAAOQ,KAAK,CAACQ;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET,CAAC;AAACW,GAAA,GAhBIR,IAAI;AAkBV,eAAef,SAAS;AAAC,IAAAiB,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}