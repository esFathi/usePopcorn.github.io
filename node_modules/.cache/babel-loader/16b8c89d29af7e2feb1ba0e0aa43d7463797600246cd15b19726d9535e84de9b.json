{"ast":null,"code":"var _jsxFileName = \"F:\\\\project\\\\react\\\\jounas\\\\usepopcorn\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport SearchBox from \"./SerachBox\";\nimport ResultsNumber from \"./ResultsNumber\";\nimport Box from \"./Ui/Box\";\nimport Loader from \"./Ui/Loader\";\nimport ErrorMessage from \"./Ui/ErrorMessage\";\nimport ResultsList from \"./ResultsList\";\nimport WatchedSummary from \"./WatchedSummary\";\nimport UserMoviesList from \"./UserMoviesList\";\nimport MovieDetails from \"./MovieDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [watched, setWatched] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [movieIdSelected, setMovieIdSelected] = useState(null);\n\n  // here we get data from api for movie list\n  const getMovies = async () => {\n    const controller = new AbortController();\n    try {\n      setIsLoading(true);\n      setError(\"\");\n      const response = await fetch(`http://www.omdbapi.com/?apikey=a862ad48&s=${query}`, {\n        signal: controller.signal\n      });\n      if (!response.ok) throw new Error(\"Something went wrong with fetching movies\");\n      const data = await response.json();\n      if (data.Response === \"False\") throw new Error(\"Movie not found!\");\n      setMovies(data.Search);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // select movie for watch movie list\n  const selectMovieHandler = id => {\n    setMovieIdSelected(mid => mid === id ? null : id);\n  };\n\n  // close movie details to back to watched movie list\n  const closeMovieHandler = () => {\n    setMovieIdSelected(null);\n  };\n\n  // add movie to the watched lsit movie\n  const addWatchedHandler = movieWatched => {\n    setWatched(watched => watched = [...watched, movieWatched]);\n\n    // close movie details to back to watched movie list\n    closeMovieHandler();\n  };\n\n  // delete a watched movie from watched movie list\n  const removeWatchedHandler = id => {\n    setWatched(watched.filter(movie => movie.imdbID !== id));\n  };\n  useEffect(() => {\n    if (query.length < 3) {\n      setMovies([]);\n      setError(\"\");\n      return;\n    }\n    getMovies();\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        query: query,\n        setQuery: setQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultsNumber, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(ResultsList, {\n          movies: movies,\n          onSelectMovie: selectMovieHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errorMessage: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: movieIdSelected ? /*#__PURE__*/_jsxDEV(MovieDetails, {\n          movieIdSelected: movieIdSelected,\n          onCloseMovie: closeMovieHandler,\n          onAddwatched: addWatchedHandler,\n          watched: watched\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(WatchedSummary, {\n            watched: watched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UserMoviesList, {\n            watched: watched,\n            onRemoveWatched: removeWatchedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"M0swG+FSVVHdkWGdPpCqy3yF37M=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","NavBar","SearchBox","ResultsNumber","Box","Loader","ErrorMessage","ResultsList","WatchedSummary","UserMoviesList","MovieDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","movies","setMovies","watched","setWatched","isLoading","setIsLoading","error","setError","movieIdSelected","setMovieIdSelected","getMovies","controller","AbortController","response","fetch","signal","ok","Error","data","json","Response","Search","message","selectMovieHandler","id","mid","closeMovieHandler","addWatchedHandler","movieWatched","removeWatchedHandler","filter","movie","imdbID","length","abort","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSelectMovie","errorMessage","onCloseMovie","onAddwatched","onRemoveWatched","_c","$RefreshReg$"],"sources":["F:/project/react/jounas/usepopcorn/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport SearchBox from \"./SerachBox\";\nimport ResultsNumber from \"./ResultsNumber\";\nimport Box from \"./Ui/Box\";\nimport Loader from \"./Ui/Loader\";\nimport ErrorMessage from \"./Ui/ErrorMessage\";\nimport ResultsList from \"./ResultsList\";\nimport WatchedSummary from \"./WatchedSummary\";\nimport UserMoviesList from \"./UserMoviesList\";\nimport MovieDetails from \"./MovieDetails\";\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [watched, setWatched] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [movieIdSelected, setMovieIdSelected] =\n    useState(null);\n\n  // here we get data from api for movie list\n  const getMovies = async () => {\n    const controller = new AbortController();\n    try {\n      setIsLoading(true);\n      setError(\"\");\n      const response = await fetch(\n        `http://www.omdbapi.com/?apikey=a862ad48&s=${query}`,\n        { signal: controller.signal }\n      );\n\n      if (!response.ok)\n        throw new Error(\n          \"Something went wrong with fetching movies\"\n        );\n\n      const data = await response.json();\n\n      if (data.Response === \"False\")\n        throw new Error(\"Movie not found!\");\n\n      setMovies(data.Search);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // select movie for watch movie list\n  const selectMovieHandler = (id) => {\n    setMovieIdSelected((mid) => (mid === id ? null : id));\n  };\n\n  // close movie details to back to watched movie list\n  const closeMovieHandler = () => {\n    setMovieIdSelected(null);\n  };\n\n  // add movie to the watched lsit movie\n  const addWatchedHandler = (movieWatched) => {\n    setWatched(\n      (watched) => (watched = [...watched, movieWatched])\n    );\n\n    // close movie details to back to watched movie list\n    closeMovieHandler();\n  };\n\n  // delete a watched movie from watched movie list\n  const removeWatchedHandler = (id) => {\n    setWatched(\n      watched.filter((movie) => movie.imdbID !== id)\n    );\n  };\n\n  useEffect(() => {\n    if (query.length < 3) {\n      setMovies([]);\n      setError(\"\");\n      return;\n    }\n\n    getMovies();\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  return (\n    <>\n      <NavBar>\n        <SearchBox query={query} setQuery={setQuery} />\n        <ResultsNumber movies={movies} />\n      </NavBar>\n      <main className='main'>\n        <Box>\n          {isLoading && <Loader />}\n          {!isLoading && !error && (\n            <ResultsList\n              movies={movies}\n              onSelectMovie={selectMovieHandler}\n            />\n          )}\n          {error && <ErrorMessage errorMessage={error} />}\n        </Box>\n        <Box>\n          {movieIdSelected ? (\n            <MovieDetails\n              movieIdSelected={movieIdSelected}\n              onCloseMovie={closeMovieHandler}\n              onAddwatched={addWatchedHandler}\n              watched={watched}\n            />\n          ) : (\n            <>\n              <WatchedSummary watched={watched} />\n              <UserMoviesList\n                watched={watched}\n                onRemoveWatched={removeWatchedHandler}\n              />\n            </>\n          )}\n        </Box>\n      </main>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}